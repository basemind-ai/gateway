name: Deploy (Frontend)
on:
    pull_request:
        branches:
            - main
        paths:
            - 'frontend/src/**'
            - 'shared/ts/**'
    push:
        branches:
            - main
        paths:
            - 'frontend/src/**'
            - 'shared/ts/**'
env:
    FIREBASE_CLI_EXPERIMENTS: webframeworks

jobs:
    deploy:
        environment: development
        runs-on: ubuntu-latest
        permissions:
            checks: write
            contents: read
            pull-requests: write
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: 20
            - name: Install Firebase CLI
              run: npm install -g firebase-tools
            - name: Install PNPM
              uses: pnpm/action-setup@v2.4.0
              id: pnpm-install
              with:
                  version: 8
                  run_install: false
            - name: Setup PNPM Cache
              id: pnpm-cache
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
            - name: Load Cached Dependencies
              uses: actions/cache@v3
              with:
                  path: ${{ env.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-
            - name: Install Node dependencies
              run: pnpm install -r
            - name: Create .env File
              shell: bash
              run: |
                  echo "NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}" >> frontend/.env
                  echo "NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}" >> frontend/.env
                  echo "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}" >> frontend/.env
                  echo "NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}" >> frontend/.env
                  echo "NEXT_PUBLIC_FIREBASE_MESSAGE_SENDER_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGE_SENDER_ID }}" >> frontend/.env
                  echo "NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}" >> frontend/.env
                  echo "NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}" >> frontend/.env
                  echo "NEXT_PUBLIC_SEGMENT_WRITE_KEY=${{ secrets.NEXT_PUBLIC_SEGMENT_WRITE_KEY }}" >> frontend/.env
                  echo "NEXT_PUBLIC_BACKEND_BASE_URL=${{ env.DEVELOPMENT_DASHBOARD_BACKEND_URL }}" >> frontend/.env
            - uses: FirebaseExtended/action-hosting-deploy@v0
              if: github.event_name != 'pull_request'
              with:
                  repoToken: ${{ secrets.GITHUB_TOKEN }}
                  firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_BASEMIND_AI_DEVELOPMENT }}
                  channelId: live
                  projectId: basemind-ai-development
            - uses: FirebaseExtended/action-hosting-deploy@v0
              if: github.event_name == 'pull_request'
              with:
                  repoToken: ${{ secrets.GITHUB_TOKEN }}
                  firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_BASEMIND_AI_DEVELOPMENT }}
                  projectId: basemind-ai-development
