name: 'Build (Frontend)'
on:
    push:
        branches:
            - development
            - production
        paths:
            - '.github/workflows/build-frontend.yaml'
            - 'package.json'
            - 'shared/ts/**'
            - 'frontend/**'
env:
    SERVICE_NAME: frontend
    FILE_PATH: ./docker/Dockerfile.frontend
    DISCORD_INVITE_URL: https://discord.gg/BzH7TQVVYy
    FIREBASE_APP_ID: 1:78794879644:web:d8b1cd5e46180811913359
    FIREBASE_AUTH_DOMAIN: basemind-ai-development.firebaseapp.com
    FIREBASE_MEASUREMENT_ID: G-J9XH9ETMTC
    FIREBASE_MESSAGE_SENDER_ID: 78794879644
    FIREBASE_MICROSOFT_TENANT_ID: ef241226-ef98-4c54-92c4-4aa4067a467d
    FIREBASE_PROJECT_ID: basemind-ai-development
    FIREBASE_STORAGE_BUCKET: basemind-ai-development.appspot.com
jobs:
    build:
        runs-on: ubuntu-latest
        timeout-minutes: 15
        environment: ${{ github.ref_name }}
        permissions:
            contents: read
            id-token: write
        steps:
            - name: Checkout
              id: checkout
              uses: actions/checkout@v4
            - name: Authenticate to Google Cloud
              id: auth
              uses: google-github-actions/auth@v2
              with:
                  token_format: access_token
                  workload_identity_provider: projects/${{vars.GCP_PROJECT_NUMBER}}/locations/global/workloadIdentityPools/${{vars.GCP_WORKLOAD_IDENTITY_POOL}}/providers/${{vars.GCP_OIDC_PROVIDER_NAME}}
                  service_account: ${{vars.GCP_SERVICE_ACCOUNT_NAME}}@${{vars.GCP_PROJECT_ID}}.iam.gserviceaccount.com
            - name: Read Secrets
              id: secrets
              uses: google-github-actions/get-secretmanager-secrets@v1
              with:
                  secrets: |-
                      firebase_api_key:${{vars.GCP_PROJECT_ID}}/FIREBASE_API_KEY
                      segment_write_key:${{vars.GCP_PROJECT_ID}}/SEGMENT_WRITE_KEY_DEV
            - name: Login to Artifact Registry
              uses: docker/login-action@v3
              with:
                  registry: ${{vars.GCP_REGION}}-docker.pkg.dev
                  username: oauth2accesstoken
                  password: ${{ steps.auth.outputs.access_token }}
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3
            - name: Set up Docker BuildX
              uses: docker/setup-buildx-action@v3
            - name: Build and Push
              uses: docker/build-push-action@v5
              with:
                  push: true
                  context: .
                  file: ${{env.FILE_PATH}}
                  build-args: |
                      BUILD_TARGET=${{env.SERVICE_NAME}}
                      DISCORD_INVITE_URL=${{env.DISCORD_INVITE_URL}}
                      FIREBASE_API_KEY=${{ steps.secrets.outputs.firebase_api_key }}
                      FIREBASE_APP_ID=${{env.FIREBASE_APP_ID}}
                      FIREBASE_AUTH_DOMAIN=${{env.FIREBASE_AUTH_DOMAIN}}
                      FIREBASE_MEASUREMENT_ID=${{env.FIREBASE_MEASUREMENT_ID}}
                      FIREBASE_MESSAGE_SENDER_ID=${{env.FIREBASE_MESSAGE_SENDER_ID}}
                      FIREBASE_MICROSOFT_TENANT_ID=${{env.FIREBASE_MICROSOFT_TENANT_ID}}
                      FIREBASE_PROJECT_ID=${{env.FIREBASE_PROJECT_ID}}
                      FIREBASE_STORAGE_BUCKET=${{env.FIREBASE_STORAGE_BUCKET}}
                      SEGMENT_WRITE_KEY=${{ steps.secrets.outputs.segment_write_key }}
                      SERVICE_NAME=${{env.SERVICE_NAME}}
                  tags: |
                      ${{vars.GCP_REGION}}-docker.pkg.dev/${{vars.GCP_PROJECT_ID}}/basemind/${{env.SERVICE_NAME}}:latest
                      ${{vars.GCP_REGION}}-docker.pkg.dev/${{vars.GCP_PROJECT_ID}}/basemind/${{env.SERVICE_NAME}}:${{github.sha}}
