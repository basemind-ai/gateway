name: Deploy (Frontend)
on:
    push:
        branches:
            - development
            - production
        paths:
            - '.github/workflows/deploy-frontend.yaml'
            - 'frontend/src/**'
            - 'package.json'
            - 'shared/ts/**'
jobs:
    build:
        runs-on: ubuntu-latest
        timeout-minutes: 30
        environment: ${{ github.ref_name }}
        permissions:
            checks: write
            contents: read
            id-token: write
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Authenticate to Google Cloud
              id: auth
              uses: google-github-actions/auth@v2
              with:
                  credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: 20
            - name: Install Firebase CLI
              run: npm install -g firebase-tools
            - name: Install PNPM
              uses: pnpm/action-setup@v2.4.0
              id: pnpm-install
              with:
                  version: 8
                  run_install: false
            - name: Setup PNPM Cache
              id: pnpm-cache
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
            - name: Load Cached Dependencies
              uses: actions/cache@v3
              with:
                  path: ${{ env.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-
            - name: Install Node dependencies
              run: pnpm install -r
            - name: Create .env File
              shell: bash
              env:
                  FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
                  SEGMENT_WRITE_KEY: ${{ secrets.SEGMENT_WRITE_KEY }}
              run: |
                  echo "NEXT_PUBLIC_BACKEND_BASE_URL=${{ vars.BACKEND_URL }}" >> frontend/.env
                  echo "NEXT_PUBLIC_DISCORD_INVITE_URL=${{ vars.DISCORD_INVITE_URL }}" >> frontend/.env
                  echo "NEXT_PUBLIC_FIREBASE_API_KEY=${{ env.FIREBASE_API_KEY }}" >> frontend/.env
                  echo "NEXT_PUBLIC_FIREBASE_APP_ID=${{ vars.FIREBASE_APP_ID }}" >> frontend/.env
                  echo "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ vars.FIREBASE_AUTH_DOMAIN }}" >> frontend/.env
                  echo "NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID=${{ vars.FIREBASE_MEASUREMENT_ID }}" >> frontend/.env
                  echo "NEXT_PUBLIC_FIREBASE_MESSAGE_SENDER_ID=${{ vars.FIREBASE_MESSAGING_SENDER_ID }}" >> frontend/.env
                  echo "NEXT_PUBLIC_FIREBASE_MICROSOFT_TENANT_ID=${{ vars.FIREBASE_MICROSOFT_TENANT_ID }}" >> frontend/.env
                  echo "NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ vars.GCP_PROJECT_ID }}" >> frontend/.env
                  echo "NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ vars.FIREBASE_STORAGE_BUCKET }}" >> frontend/.env
                  echo "NEXT_PUBLIC_SEGMENT_WRITE_KEY=${{ env.SEGMENT_WRITE_KEY }}" >> frontend/.env
            - name: Deploy to Firebase
              env:
                  FIREBASE_CLI_EXPERIMENTS: webframeworks
              run: |
                  firebase deploy --only hosting --project ${{ vars.GCP_PROJECT_ID }} --debug
