syntax = "proto3";

package gateway.v1;

option go_package = "github.com/basemind-ai/monorepo/gen/gateway";
option java_multiple_files = true;
option java_package = "ai.basemind.grpc";

// The API Gateway service definition.
service APIGatewayService {
  // Request a regular LLM prompt
  rpc RequestPrompt(PromptRequest) returns (PromptResponse) {}
  // Request a streaming LLM prompt
  rpc RequestStreamingPrompt(PromptRequest) returns (stream StreamingPromptResponse) {}
}

// A request for a prompt - sending user input to the server.
message PromptRequest {
  // The User prompt variables
  // This is a hash-map of variables that should have the same keys as those contained by the PromptConfigResponse
  map<string, string> template_variables = 1;
  // Optional Identifier designating the prompt config ID to use. If not set, the default prompt config will be used.
  optional string prompt_config_id = 2;
}

// A Prompt Response Message
message PromptResponse {
  // Prompt Content
  string content = 1;
  // Number of tokens used for the prompt request
  uint32 request_tokens = 2;
  // Number of tokens used for the prompt response
  uint32 response_tokens = 3;
  // Request duration
  uint32 request_duration = 4;
}

// An Streaming Prompt Response Message
message StreamingPromptResponse {
  // Prompt Content
  string content = 1;
  // Finish reason, given when the stream ends
  optional string finish_reason = 2;
  // Number of tokens used for the prompt request, given when the stream ends
  optional uint32 request_tokens = 3;
  // Number of tokens used for the prompt response, given when the stream ends
  optional uint32 response_tokens = 4;
  // Stream duration, given when the stream ends
  optional uint32 stream_duration = 5;
}
