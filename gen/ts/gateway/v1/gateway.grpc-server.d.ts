// @generated by protobuf-ts 2.9.4 with parameter generate_dependencies,long_type_string,output_javascript_es2020,server_grpc1,force_client_none
// @generated from protobuf file "gateway/v1/gateway.proto" (package "gateway.v1", syntax proto3)
// tslint:disable
import { StreamingPromptResponse } from "./gateway";
import { PromptResponse } from "./gateway";
import { PromptRequest } from "./gateway";
import type * as grpc from "@grpc/grpc-js";
/**
 * The API Gateway service definition.
 *
 * @generated from protobuf service gateway.v1.APIGatewayService
 */
export interface IAPIGatewayService extends grpc.UntypedServiceImplementation {
    /**
     * Request a regular LLM prompt
     *
     * @generated from protobuf rpc: RequestPrompt(gateway.v1.PromptRequest) returns (gateway.v1.PromptResponse);
     */
    requestPrompt: grpc.handleUnaryCall<PromptRequest, PromptResponse>;
    /**
     * Request a streaming LLM prompt
     *
     * @generated from protobuf rpc: RequestStreamingPrompt(gateway.v1.PromptRequest) returns (stream gateway.v1.StreamingPromptResponse);
     */
    requestStreamingPrompt: grpc.handleServerStreamingCall<PromptRequest, StreamingPromptResponse>;
}
/**
 * @grpc/grpc-js definition for the protobuf service gateway.v1.APIGatewayService.
 *
 * Usage: Implement the interface IAPIGatewayService and add to a grpc server.
 *
 * ```typescript
 * const server = new grpc.Server();
 * const service: IAPIGatewayService = ...
 * server.addService(aPIGatewayServiceDefinition, service);
 * ```
 */
export declare const aPIGatewayServiceDefinition: grpc.ServiceDefinition<IAPIGatewayService>;
