// @generated by protobuf-ts 2.9.1 with parameter generate_dependencies,long_type_string,output_javascript_es2020,server_grpc1,force_client_none
// @generated from protobuf file "cohere/v1/cohere.proto" (package "cohere.v1", syntax proto3)
// tslint:disable
// @generated by protobuf-ts 2.9.1 with parameter generate_dependencies,long_type_string,output_javascript_es2020,server_grpc1,force_client_none
// @generated from protobuf file "cohere/v1/cohere.proto" (package "cohere.v1", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
// @generated message type with reflection information, may provide speed optimized methods
class CoherePromptRequest$Type extends MessageType {
    constructor() {
        super("cohere.v1.CoherePromptRequest", []);
    }
}
/**
 * @generated MessageType for protobuf message cohere.v1.CoherePromptRequest
 */
export const CoherePromptRequest = new CoherePromptRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CoherePromptResponse$Type extends MessageType {
    constructor() {
        super("cohere.v1.CoherePromptResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message cohere.v1.CoherePromptResponse
 */
export const CoherePromptResponse = new CoherePromptResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CohereStreamResponse$Type extends MessageType {
    constructor() {
        super("cohere.v1.CohereStreamResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message cohere.v1.CohereStreamResponse
 */
export const CohereStreamResponse = new CohereStreamResponse$Type();
/**
 * @generated ServiceType for protobuf service cohere.v1.CohereService
 */
export const CohereService = new ServiceType("cohere.v1.CohereService", [
    { name: "CoherePrompt", options: {}, I: CoherePromptRequest, O: CoherePromptResponse },
    { name: "CohereStream", serverStreaming: true, options: {}, I: CoherePromptRequest, O: CohereStreamResponse }
]);
