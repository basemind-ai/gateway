// @generated by protobuf-ts 2.9.4 with parameter generate_dependencies,long_type_string,output_javascript_es2020,server_grpc1,force_client_none
// @generated from protobuf file "cohere/v1/cohere.proto" (package "cohere.v1", syntax proto3)
// tslint:disable
import { CohereStreamResponse } from "./cohere";
import { CoherePromptResponse } from "./cohere";
import { CoherePromptRequest } from "./cohere";
import type * as grpc from "@grpc/grpc-js";
/**
 * The CohereService service definition.
 *
 * @generated from protobuf service cohere.v1.CohereService
 */
export interface ICohereService extends grpc.UntypedServiceImplementation {
    /**
     * Request a regular LLM prompt
     *
     * @generated from protobuf rpc: CoherePrompt(cohere.v1.CoherePromptRequest) returns (cohere.v1.CoherePromptResponse);
     */
    coherePrompt: grpc.handleUnaryCall<CoherePromptRequest, CoherePromptResponse>;
    /**
     * Request a streaming LLM prompt
     *
     * @generated from protobuf rpc: CohereStream(cohere.v1.CoherePromptRequest) returns (stream cohere.v1.CohereStreamResponse);
     */
    cohereStream: grpc.handleServerStreamingCall<CoherePromptRequest, CohereStreamResponse>;
}
/**
 * @grpc/grpc-js definition for the protobuf service cohere.v1.CohereService.
 *
 * Usage: Implement the interface ICohereService and add to a grpc server.
 *
 * ```typescript
 * const server = new grpc.Server();
 * const service: ICohereService = ...
 * server.addService(cohereServiceDefinition, service);
 * ```
 */
export declare const cohereServiceDefinition: grpc.ServiceDefinition<ICohereService>;
