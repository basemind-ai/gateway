// @generated by protobuf-ts 2.9.1 with parameter generate_dependencies,long_type_string,output_javascript_es2020,server_grpc1,force_client_none
// @generated from protobuf file "openai/service/v1/openai.proto" (package "openai.service.v1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * A Prompt Request
 *
 * @generated from protobuf message openai.service.v1.PromptRequest
 */
export interface PromptRequest {
    /**
     * Model name
     *
     * @generated from protobuf field: string model = 1;
     */
    model: string;
    /**
     * Prompt Content
     *
     * @generated from protobuf field: string content = 2;
     */
    content: string;
}
/**
 * A Prompt Response
 *
 * @generated from protobuf message openai.service.v1.PromptResponse
 */
export interface PromptResponse {
    /**
     * Prompt Content
     *
     * @generated from protobuf field: string content = 1;
     */
    content: string;
}
declare class PromptRequest$Type extends MessageType<PromptRequest> {
    constructor();
    create(value?: PartialMessage<PromptRequest>): PromptRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PromptRequest): PromptRequest;
    internalBinaryWrite(message: PromptRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message openai.service.v1.PromptRequest
 */
export declare const PromptRequest: PromptRequest$Type;
declare class PromptResponse$Type extends MessageType<PromptResponse> {
    constructor();
    create(value?: PartialMessage<PromptResponse>): PromptResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PromptResponse): PromptResponse;
    internalBinaryWrite(message: PromptResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message openai.service.v1.PromptResponse
 */
export declare const PromptResponse: PromptResponse$Type;
/**
 * @generated ServiceType for protobuf service openai.service.v1.OpenAIService
 */
export declare const OpenAIService: any;
export {};
