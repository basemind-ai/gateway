version: '3.9'

services:
    redis:
        image: redis:latest
        ports:
            - '6379:6379'
    db:
        image: postgres:latest
        volumes:
            - db:/var/lib/postrgresql/data/
        ports:
            - '5432:5432'
        environment:
            POSTGRES_PASSWORD: basemind
            POSTGRES_DB: basemind
            POSTGRES_USER: basemind
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -d $${POSTGRES_DB} -U basemind']
            interval: 30s
            timeout: 5s
            retries: 5
            start_period: 5s
    api-gateway:
        build:
            dockerfile: docker/Dockerfile.go-services
            context: .
            target: install
            args:
                BUILD_TARGET: api-gateway
        ports:
            - '4000:4000'
        volumes:
            - ./.secrets:/go/src/app/.secrets:cached
            - ./gen/go:/go/src/app/gen/go:cached
            - ./services/api-gateway:/go/src/app/services/api-gateway:cached
            - ./shared/go:/go/src/app/shared/go:cached
            - ./go.mod:/go/src/app/go.mod:cached
            - ./go.sum:/go/src/app/go.sum:cached
        environment:
            DATABASE_URL: postgresql://basemind:basemind@db:5432/basemind
            ENVIRONMENT: development
            FRONTEND_BASE_URL: http://localhost:3000
            GCP_PROJECT_ID: basemind-ai-development
            GOOGLE_APPLICATION_CREDENTIALS: ./.secrets/serviceAccountKey.json
            JWT_SECRET: jeronimo
            OPENAI_CONNECTOR_ADDRESS: openai-connector:8000
            COHERE_CONNECTOR_ADDRESS: cohere-connector:9000
            REDIS_CONNECTION_STRING: redis://redis:6379
            SERVER_HOST: localhost
            SERVER_PORT: 4000
            URL_SIGNING_SECRET: jeronimo
            CRYPTO_PASS_KEY: KJgicfWjOGNzr0Bwo9z7W1jcOLFi6Ael
        command:
            [
                'gow',
                '-e=go,mod,html',
                'run',
                '/go/src/app/services/api-gateway/main.go',
            ]
    dashboard-backend:
        build:
            dockerfile: docker/Dockerfile.go-services
            context: .
            target: install
            args:
                BUILD_TARGET: dashboard-backend
        ports:
            - '4100:4100'
        volumes:
            - ./.secrets:/go/src/app/.secrets:cached
            - ./gen/go:/go/src/app/gen/go:cached
            - ./services/dashboard-backend:/go/src/app/services/dashboard-backend:cached
            - ./shared/go:/go/src/app/shared/go:cached
            - ./go.mod:/go/src/app/go.mod:cached
            - ./go.sum:/go/src/app/go.sum:cached
        environment:
            API_GATEWAY_ADDRESS: api-gateway:4000
            CRYPTO_PASS_KEY: KJgicfWjOGNzr0Bwo9z7W1jcOLFi6Ael
            DATABASE_URL: postgresql://basemind:basemind@db:5432/basemind
            ENVIRONMENT: development
            FRONTEND_BASE_URL: http://localhost:3000
            GCP_PROJECT_ID: basemind-ai-development
            GOOGLE_APPLICATION_CREDENTIALS: ./.secrets/serviceAccountKey.json
            JWT_SECRET: jeronimo
            REDIS_CONNECTION_STRING: redis://redis:6379
            SERVER_HOST: localhost
            SERVER_PORT: 4100
            URL_SIGNING_SECRET: jeronimo
        command:
            [
                'gow',
                '-e=go,mod,html',
                'run',
                '/go/src/app/services/dashboard-backend/main.go',
            ]
    openai-connector:
        build:
            dockerfile: docker/Dockerfile.ts-services
            context: .
            target: install
            args:
                BUILD_TARGET: openai-connector
        ports:
            - '8000:8000'
        volumes:
            - ./gen/ts:/app/gen/ts:cached
            - ./services/openai-connector/src:/app/services/openai-connector/src:cached
            - ./shared/ts/src:/app/shared/ts/src:cached
        environment:
            NODE_ENV: development
            GRPC_VERBOSITY: debug
            GRPC_TRACE: channel,subchannel,call_stream,connectivity_state,server_call,keepalive,server,subchannel_flowctrl
            SERVER_PORT: 8000
        working_dir: /app/services/openai-connector
        command: ['pnpm', 'run', 'dev']
        env_file: .secrets/.env.openai-connector
    cohere-connector:
        build:
            dockerfile: docker/Dockerfile.ts-services
            context: .
            target: install
            args:
                BUILD_TARGET: cohere-connector
        ports:
            - '9000:9000'
        volumes:
            - ./gen/ts:/app/gen/ts:cached
            - ./services/cohere-connector/src:/app/services/cohere-connector/src:cached
            - ./shared/ts/src:/app/shared/ts/src:cached
        environment:
            NODE_ENV: development
            GRPC_VERBOSITY: debug
            GRPC_TRACE: channel,subchannel,call_stream
            SERVER_PORT: 9000
        working_dir: /app/services/cohere-connector
        command: ['pnpm', 'run', 'dev']
        env_file: .secrets/.env.cohere-connector
    frontend:
        build:
            dockerfile: docker/Dockerfile.frontend
            context: .
            target: install
        ports:
            - '3000:3000'
        volumes:
            - ./frontend/next.config.js:/app/frontend/next.config.js:cached
            - ./frontend/tailwind.config.ts:/app/frontend/tailwind.config.ts:cached
            - ./frontend/public:/app/frontend/public:cached
            - ./frontend/src:/app/frontend/src:cached
            - ./shared/ts/src:/app/shared/ts/src:cached
        environment:
            NEXT_PUBLIC_BACKEND_URL: http://localhost:4100
            NEXT_PUBLIC_FRONTEND_HOST: http://localhost
            NODE_ENV: development
            REACT_EDITOR: code
        working_dir: /app/frontend
        command: ['pnpm', 'run', 'dev']
        env_file: .secrets/.env.frontend
volumes:
    db:
