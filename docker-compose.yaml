version: '3.9'

services:
    redis:
        image: redis:latest
        ports:
            - '6379:6379'
    db:
        image: postgres:latest
        volumes:
            - db:/var/lib/postrgresql/data/
        ports:
            - '5432:5432'
        environment:
            POSTGRES_PASSWORD: basemind
            POSTGRES_DB: basemind
            POSTGRES_USER: basemind
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -d $${POSTGRES_DB} -U basemind']
            interval: 30s
            timeout: 5s
            retries: 5
            start_period: 5s
    dashboard-backend:
        build:
            dockerfile: docker/Dockerfile.go-services
            context: .
            target: install
            args:
                BUILD_TARGET: dashboard-backend
        ports:
            - '4000:4000'
        volumes:
            - ./go.mod:/go/src/app/go.mod:cached
            - ./go.sum:/go/src/app/go.sum:cached
            - ./.secrets:/go/src/app/.secrets:cached
            - ./go-services/dashboard-backend:/go/src/app/go-services/dashboard-backend:cached
            - ./go-shared:/go/src/app/go-shared:cached
        environment:
            PORT: 4000
            ENVIRONMENT: development
            BASE_URL: http://localhost:4000
            REDIS_CONNECTION_STRING: redis://redis:6379
            DATABASE_URL: postgresql://basemind:basemind@db:5432/basemind
            GOOGLE_APPLICATION_CREDENTIALS: /.secrets/serviceAccountKey.json
        command:
            [
                'gow',
                '-e=go,mod,html',
                'run',
                '/go/src/app/go-services/dashboard-backend/main.go',
            ]
    ts-web:
        build:
            dockerfile: docker/Dockerfile.ts-web
            context: .
            target: install
            args:
                - NODE_ENV=development
        ports:
            - '3000:3000'
        volumes:
            - ./ts-web/src:/app/ts-web/src:cached
            - ./ts-web/public:/app/ts-web/public:cached
        environment:
            NEXT_PUBLIC_BACKEND_BASE_URL: http://0.0.0.0:8000/v1
            NODE_ENV: development
        working_dir: /app/ts-web
        command: ['pnpm', 'run', 'dev']
        env_file: '.secrets/.env.frontend'
volumes:
    db:
