FROM node:20-slim AS base
RUN npm i -g pnpm

FROM base AS install
WORKDIR /app/
ARG NODE_ENV="production"
ENV NODE_ENV=${NODE_ENV}
COPY package.json pnpm-lock.yaml tsconfig.json .npmrc pnpm-workspace.yaml ./
COPY ts-web/tsconfig.json ts-web/package.json ts-web/pnpm-lock.yaml ts-web/next.config.js ts-web/i18n.js ts-web/postcss.config.js ts-web/tailwind.config.js ./ts-web/
RUN pnpm install -r --ignore-scripts
RUN pnpm add -D @next/swc-linux-arm64-gnu @next/swc-linux-arm64-musl -w

FROM install AS build
WORKDIR /app/
COPY ts-shared ts-shared
COPY ts-web/src ts-web/src
COPY ts-web/public ts-web/public
WORKDIR /app/ts-web
RUN pnpm run build

FROM base AS app
WORKDIR /app/
EXPOSE 3000
ENV PORT 3000
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED 1
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 app

COPY ts-web/public ts-web/public
COPY --from=build --chown=app:nodejs /app/ts-web/dist ts-web/dist

COPY package.json pnpm-lock.yaml .npmrc pnpm-workspace.yaml ./
COPY ts-web/package.json ts-web/pnpm-lock.yaml ts-web/next.config.js ts-web/next-i18next.config.js ts-web/tailwind.config.js ./ts-web/
RUN pnpm install -r --ignore-scripts

WORKDIR /app/ts-web
USER app
CMD ["pnpm", "run", "start"]
